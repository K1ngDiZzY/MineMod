name: CD (Release)

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0
  release:
    types: [published]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Xmx5G"

jobs:
  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    permissions:
      contents: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Extract version from tag
      id: extract_version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Extracted version: $VERSION"

    - name: Build release artifacts
      run: |
        ./gradlew build --no-daemon --stacktrace
        ./gradlew jar --no-daemon

    - name: Run tests
      run: ./gradlew test --no-daemon --stacktrace

    - name: Create release changelog
      id: changelog
      run: |
        if [ -f "changelog.txt" ]; then
          # Extract recent changes from changelog
          head -20 changelog.txt > release_notes.md
        else
          echo "Release ${{ steps.extract_version.outputs.VERSION }}" > release_notes.md
          echo "Built from commit: ${{ github.sha }}" >> release_notes.md
        fi

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      with:
        files: |
          build/libs/*.jar
          !build/libs/*-sources.jar
          !build/libs/*-javadoc.jar
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(steps.extract_version.outputs.VERSION, 'alpha') || contains(steps.extract_version.outputs.VERSION, 'beta') || contains(steps.extract_version.outputs.VERSION, 'rc') }}
        name: Release ${{ steps.extract_version.outputs.VERSION }}
        tag_name: ${{ github.ref_name }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifacts to action
      uses: actions/upload-artifact@v4
      with:
        name: release-artifacts-${{ steps.extract_version.outputs.VERSION }}
        path: |
          build/libs/*.jar
          !build/libs/*-sources.jar
          !build/libs/*-javadoc.jar
        retention-days: 90