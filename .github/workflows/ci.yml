name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Xmx5G"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java-version: [21]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      if: runner.os != 'Windows'
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build --no-daemon --stacktrace

    - name: Run tests
      run: ./gradlew test --no-daemon --stacktrace

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest'
      with:
        name: mod-jar-${{ github.sha }}
        path: build/libs/*.jar
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always() && matrix.os == 'ubuntu-latest'
      with:
        name: test-results-${{ github.sha }}
        path: build/reports/tests/
        retention-days: 30

  code-quality:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Run code quality checks
      run: ./gradlew check --no-daemon --stacktrace

    - name: Upload check results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: check-results-${{ github.sha }}
        path: build/reports/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run dependency vulnerability scan
      uses: github/super-linter@v7
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_JAVA: true
        VALIDATE_GRADLE: true